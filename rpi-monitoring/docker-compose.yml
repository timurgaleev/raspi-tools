version: "3"

services:

  nginx:
    image: nginx:alpine
    container_name: nginx
    hostname: nginx
    labels:
      docker.group: "RPI Monitor"
      docker.app: "nginx"
      org.label-schema.group: "monitoring"
    command: ["nginx", "-c", "/etc/nginx/nginx.conf"]
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    restart: unless-stopped
    depends_on:
      - influxdb
      - telegraf
    ports:
      - "80:80"
      - "443:443"
      - "3000:3000"
      - "8086:8086"
    networks:
      - monitor-net

  influxdb:
    image: influxdb:1.8.3
    container_name: influxdb
    hostname: influxdb
    labels:
      docker.group: "RPI Monitor"
      docker.app: "influxdb"
      org.label-schema.group: "monitoring"
    restart: unless-stopped
    volumes:
      - "influxdb:/var/influxdb/data"
    env_file:
      - ./credentials.env
    expose:
      - 8086
    networks:
      - monitor-net

  telegraf:
    build:
      context: .
      dockerfile: telegraf/Dockerfile
    container_name: telegraf
    hostname: telegraf
    labels:
      docker.group: "RPI Monitor"
      docker.app: "telegraf"
      org.label-schema.group: "monitoring"
    restart: unless-stopped
    volumes:
      - "./telegraf/conf/telegraf.conf:/etc/telegraf/telegraf.conf"
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/rootfs/sys:ro
      - /proc:/rootfs/proc:ro
      - /etc:/rootfs/etc:ro
    environment:
      HOST_PROC: /rootfs/proc
      HOST_SYS: /rootfs/sys
      HOST_ETC: /rootfs/etc
    env_file:
      - ./credentials.env
    depends_on:
      - influxdb
    networks:
      - monitor-net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    hostname: grafana
    volumes:
      - grafana:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_SERVER_ROOT_URL: "%(protocol)s://%(domain)s:%(http_port)s/grafana/"
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_SERVER_SERVE_FROM_SUB_PATH: "true"
      GF_INSTALL_PLUGINS: "https://grafana.com/api/plugins/gowee-traceroutemap-panel/versions/0.2.3/download;gowee-traceroutemap-panel"
    restart: unless-stopped
    user: "1001:1001"
    depends_on:
      - influxdb
    healthcheck:
      test: 'wget -q --spider http://127.0.0.1:3000/api/health || exit 1'
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - monitor-net
    expose:
      - 3000
    labels:
      org.label-schema.group: "monitoring"

volumes:
  influxdb:
  grafana:

networks:
  monitor-net:
