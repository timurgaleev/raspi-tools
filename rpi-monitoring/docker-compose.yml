version: "3"

services:

  proxy:
    image: proxy:latest
    build:
      context: .
      dockerfile: proxy/Dockerfile
    restart: always
    hostname: proxy
    container_name: proxy
    depends_on:
      - prometheus
      - node-exporter
    environment:
      PROXY_UPSTREAM_NODEEXPORTER_HOST: node-exporter
      PROXY_UPSTREAM_NODEEXPORTER_PORT: 9100
      PROXY_UPSTREAM_CADVISOR_HOST: cadvisor
      PROXY_UPSTREAM_CADVISOR_PORT: 8080
      PROXY_UPSTREAM_PROMETHEUS_HOST: prometheus
      PROXY_UPSTREAM_PROMETHEUS_PORT: 9090
      PROXY_UPSTREAM_GRAFANA_HOST: grafana
      PROXY_UPSTREAM_GRAFANA_PORT: 3000
    ports:
     - 127.0.0.1:80:80
     - 127.0.0.1:443:443
    networks:
      - monitoring

  node-exporter:
    image: prom/node-exporter:latest
    restart: always
    hostname: node-exporter
    container_name: node-exporter
    user: "1001:1001"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.tcpstat
      - --collector.wifi
      - --collector.processes
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    networks:
      - monitoring

  cadvisor:
    image: cadvisor:latest
    build:
      context: .
      dockerfile: cadvisor/Dockerfile
      args:
        VERSION: "v0.38.6"
    restart: always
    hostname: cadvisor
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    restart: always
    hostname: prometheus
    container_name: prometheus
    user: "65534:65534"
    depends_on:
      - node-exporter
    volumes:
      - /home/motioneye/prometheus/:/etc/prometheus/
      - prometheus:/prometheus
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    restart: always
    hostname: grafana
    container_name: grafana
    user: "1001:1001"
    depends_on:
      - prometheus
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_SERVER_ROOT_URL: "%(protocol)s://%(domain)s:%(http_port)s/grafana/"
      GF_SERVER_SERVE_FROM_SUB_PATH: "true"
    volumes:
      - grafana:/var/lib/grafana
    networks:
      - monitoring

volumes:
  prometheus:
  grafana:

networks:
  monitoring:
